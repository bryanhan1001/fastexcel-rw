name: Docs

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Set up rust toolchain
        uses: dtolnay/rust-toolchain@stable
        
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
      - name: Create gh-pages branch if it doesn't exist
        run: |
          if ! git ls-remote --heads origin gh-pages | grep -q gh-pages; then
            echo "Creating gh-pages branch..."
            git checkout --orphan gh-pages
            git rm -rf . || true
            echo "# Documentation" > README.md
            git add README.md
            git commit -m "Initial gh-pages commit"
            git push origin gh-pages
            echo "gh-pages branch created successfully"
          else
            echo "gh-pages branch already exists"
          fi
          
      - name: Switch to main branch
        run: git checkout main
        
      - name: Build documentation
        run: |
          # Create virtual environment
          python3 -m venv .venv
          source .venv/bin/activate
          
          # Ensure environment variables are clean
          unset CONDA_PREFIX
          
          # Install basic requirements
          pip install --upgrade pip
          pip install -r build-requirements.txt
          
          # Install documentation requirements
          pip install pdoc
          
          # Build the package
          echo "Building fastexcel_rw package..."
          if ! maturin develop -E pandas,polars; then
            echo "Build failed, creating placeholder docs..."
            mkdir -p docs
            echo "# fastexcel_rw Documentation" > docs/index.html
            echo "<p>Documentation build failed - package could not be built</p>" >> docs/index.html
            echo "<p>Please check the build logs for more details</p>" >> docs/index.html
            exit 0
          fi
          
          # Generate documentation
          echo "Generating documentation..."
          pdoc -o docs python/fastexcel_rw
          
          # Verify docs were generated
          if [ ! -d "docs" ] || [ ! -f "docs/index.html" ]; then
            echo "Documentation generation failed"
            exit 1
          fi
          
          echo "Documentation generated successfully"
          ls -la docs/
          
      - name: Deploy to gh-pages
        run: |
          # Store the generated docs in a temporary location
          cp -r docs /tmp/generated-docs
          
          # Switch to gh-pages branch
          git checkout gh-pages
          
          # Clear existing content
          rm -rf * || true
          rm -rf .github || true
          
          # Copy new docs
          cp -r /tmp/generated-docs/* .
          
          # Create a .nojekyll file to ensure GitHub Pages works properly
          touch .nojekyll
          
          # Add all files
          git add .
          
          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Commit and push
          git commit -m "Update documentation from main branch [$(date)]"
          git push origin gh-pages
          echo "Documentation deployed to gh-pages successfully"
