name: Docs

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Set up rust toolchain
        uses: dtolnay/rust-toolchain@stable
        
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
      - name: Create gh-pages branch if it doesn't exist
        run: |
          if ! git ls-remote --heads origin gh-pages | grep -q gh-pages; then
            echo "Creating gh-pages branch..."
            git checkout --orphan gh-pages
            git rm -rf . || true
            echo "# Documentation" > README.md
            git add README.md
            git commit -m "Initial gh-pages commit"
            git push origin gh-pages
            echo "gh-pages branch created successfully"
          else
            echo "gh-pages branch already exists"
          fi
          
      - name: Switch to main branch
        run: git checkout main
        
      - name: Build documentation
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          
          pip install -r build-requirements.txt
          
          # Try to install in development mode
          if ! maturin develop --uv; then
            echo "Development install failed, trying without uv..."
            maturin develop || {
              echo "Build failed, skipping documentation build"
              exit 1
            }
          fi
          
          # Install doc requirements if they exist
          if [ -f "doc-requirements.txt" ]; then
            pip install -r doc-requirements.txt
          fi
          
          # Generate documentation
          if command -v pdoc &> /dev/null; then
            pdoc -o docs python/fastexcel
            echo "Documentation generated successfully"
          else
            echo "pdoc not found, skipping documentation generation"
            mkdir -p docs
            echo "# Documentation" > docs/index.html
            echo "<p>Documentation build skipped - pdoc not available</p>" >> docs/index.html
          fi
          
      - name: Deploy to gh-pages
        run: |
          git checkout gh-pages
          
          # Clear existing docs
          rm -rf docs || true
          
          # Copy new docs
          git checkout main -- docs/
          
          # Add and commit
          git add docs/
          git commit -m "Update documentation from main branch" || {
            echo "No changes to commit"
            exit 0
          }
          
          git push origin gh-pages
          echo "Documentation deployed to gh-pages"
