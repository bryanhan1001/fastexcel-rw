name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        architecture: [x86-64, aarch64]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    - name: Show Rust version
      run: |
        rustc --version
        cargo --version
    - name: build (release)
      uses: PyO3/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: "--release -o dist --features writer"
        target: ${{ matrix.architecture == 'aarch64' && 'aarch64-unknown-linux-gnu' || null }}
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: "wheels-linux-python-${{ matrix.python-version }}-${{ matrix.architecture }}"
        path: dist

  macos:
    runs-on: macos-14
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        architecture: [x86-64, aarch64]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    - name: Show Rust version
      run: |
        rustc --version
        cargo --version
    - name: build (release)
      uses: PyO3/maturin-action@v1
      with:
        command: build
        args: "--release -o dist --features writer"
        target: ${{ matrix.architecture == 'aarch64' && 'aarch64-apple-darwin' || 'x86_64-apple-darwin' }}
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: "wheels-macos-python-${{ matrix.python-version }}-${{ matrix.architecture }}"
        path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        # amd64 only for windows, as no arm64 runners are available
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    - name: Show Rust version
      run: |
        rustc --version
        cargo --version
    - name: build (release)
      uses: PyO3/maturin-action@v1
      with:
        command: build
        args: "--release -o dist --features writer"
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: "wheels-windows-python-${{ matrix.python-version }}"
        path: dist

  sdist:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Show Rust version
        run: |
          rustc --version
          cargo --version
      - name: build (sdist)
        uses: PyO3/maturin-action@v1
        with:
          manylinux: auto
          command: sdist
          args: "-o dist"
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  # NOTE: Cannot use a matrix here, as we only want a single release
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, macos, windows, sdist]
    steps:
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    
    # Download all artifacts
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        
    - name: Flatten directory structure
      run: |
        mkdir -p wheels
        find dist -name "*.whl" -exec cp {} wheels/ \;
        find dist -name "*.tar.gz" -exec cp {} wheels/ \;
        ls -la wheels/

    - name: Publish to PyPI
      uses: PyO3/maturin-action@v1
      env:
        MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      with:
        command: upload
        args: "--skip-existing wheels/*"

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: wheels/*
